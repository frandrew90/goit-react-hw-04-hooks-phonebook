{"version":3,"sources":["Components/filter/Filter.module.css","Components/App.module.css","Components/contatctForm/ContactForm.module.css","Components/contactList/ContactList.js","Components/contatctForm/ContactForm.js","Components/filter/Filter.js","Components/App.js","index.js","Components/contactList/ContactList.module.css"],"names":["module","exports","ContactList","findContact","removeContact","map","contact","className","s","contactListItem","contactListName","name","contactListNumber","number","contactListItemBtn","type","id","onClick","ContactForm","state","reset","setState","handleChange","e","target","value","handleSubmit","preventDefault","props","isThereContact","alert","addNewContact","contactForm","onSubmit","this","contactFormName","contactFormNameInput","onChange","pattern","title","required","contactFormNumber","contactFormNumInput","contactFormBtn","Component","Filter","filter","filterInput","App","contacts","newContact","prevState","uuidv4","toLowerCase","includes","some","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76d91c26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3Sn5o\",\"filterInput\":\"Filter_filterInput__2b7JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1r1I_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3mxAl\",\"contactFormName\":\"ContactForm_contactFormName__nAYXo\",\"contactFormNameInput\":\"ContactForm_contactFormNameInput__1gV9g\",\"contactFormNumber\":\"ContactForm_contactFormNumber__Of5D5\",\"contactFormNumInput\":\"ContactForm_contactFormNumInput__2FCsm\",\"contactFormBtn\":\"ContactForm_contactFormBtn__1VSJQ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ findContact, removeContact }) => {\r\n  return (\r\n    <ul>\r\n      {findContact.map(contact => {\r\n        return (\r\n          <li className={s.contactListItem} key={contact.id}>\r\n            <span className={s.contactListName}>{contact.name}:</span>\r\n            &nbsp;\r\n            <span className={s.contactListNumber}>{contact.number}</span>\r\n            <button\r\n              className={s.contactListItemBtn}\r\n              type=\"button\"\r\n              id={contact.id}\r\n              onClick={removeContact}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  findContact: PropTypes.array.isRequired,\r\n  removeContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.props.isThereContact(this.state.name)) {\r\n      return alert(`${this.state.name} has been already in contact list`);\r\n    }\r\n    this.props.addNewContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n        <label className={s.contactFormName}>\r\n          Name:\r\n          <input\r\n            className={s.contactFormNameInput}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.contactFormNumber}>\r\n          Number:\r\n          <input\r\n            className={s.contactFormNumInput}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={s.contactFormBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n  isThereContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name:\r\n      <input\r\n        className={s.filterInput}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './contactList/ContactList';\r\nimport ContactForm from './contatctForm/ContactForm';\r\nimport Filter from './filter/Filter';\r\nimport s from '../Components/App.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n\r\n    filter: '',\r\n  };\r\n\r\n  addNewContact = newContact => {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, { ...newContact, id: uuidv4() }],\r\n    }));\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  removeContact = e => {\r\n    const id = e.target.id;\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      // filter: '',\r\n    }));\r\n  };\r\n\r\n  findContact = e => {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  isThereContact = name =>\r\n    this.state.contacts.some(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n  componentDidMount() {\r\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (contacts) {\r\n      this.setState({ contacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n\r\n        <ContactForm\r\n          //   handleChange={this.handleChange}\r\n          addNewContact={this.addNewContact}\r\n          isThereContact={this.isThereContact}\r\n        />\r\n\r\n        <h2 className={s.title}>Contacts</h2>\r\n\r\n        <Filter filter={this.state.filter} onChange={this.handleChange} />\r\n\r\n        <ContactList\r\n          findContact={this.findContact()}\r\n          removeContact={this.removeContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__3gIdN\",\"contactListName\":\"ContactList_contactListName__2lDgX\",\"contactListNumber\":\"ContactList_contactListNumber__1ZCiF\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__3UQ3V\"};"],"sourceRoot":""}